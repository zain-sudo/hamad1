<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Audience" xml:space="preserve">
    <value>참석할 수 있는 사람</value>
    <comment>The value for audience text</comment>
  </data>
  <data name="AudiencePrivate" xml:space="preserve">
    <value>비공개</value>
    <comment>The private event text</comment>
  </data>
  <data name="AudiencePublic" xml:space="preserve">
    <value>공개</value>
    <comment>The public event text</comment>
  </data>
  <data name="AutoRegisteredCardSubTitle" xml:space="preserve">
    <value>이 이벤트에 대해 자동으로 등록되었습니다.</value>
    <comment>Auto registration card sub title</comment>
  </data>
  <data name="AutoRegisteredHeader" xml:space="preserve">
    <value>필수 이벤트!</value>
    <comment>Title for auto registration card sent to user</comment>
  </data>
  <data name="CancellationCardSubTitle" xml:space="preserve">
    <value>유감스럽게도 다음 이벤트가 취소되었습니다.</value>
    <comment>Cancellation card subtitle</comment>
  </data>
  <data name="CancellationHeader" xml:space="preserve">
    <value>이벤트가 취소되었습니다!</value>
    <comment>Cancellation card title</comment>
  </data>
  <data name="Category" xml:space="preserve">
    <value>범주</value>
    <comment>The value for category</comment>
  </data>
  <data name="CloseRegistrationCardButton" xml:space="preserve">
    <value>등록 닫기</value>
    <comment>Close registrations card button</comment>
  </data>
  <data name="CreatedByLabel" xml:space="preserve">
    <value>만든 사람</value>
    <comment>Created by user label text on card</comment>
  </data>
  <data name="CreateEventButtonWelcomeCard" xml:space="preserve">
    <value>이벤트 추가</value>
    <comment>LnD team welcome card add event button text</comment>
  </data>
  <data name="CreateEventCardTitleText" xml:space="preserve">
    <value>새 이벤트 만들기</value>
    <comment>The create event card title</comment>
  </data>
  <data name="DailyReminderCardTitle" xml:space="preserve">
    <value>내일의 이벤트</value>
    <comment>The reminder card title for daily reminder</comment>
  </data>
  <data name="DateAndTimeLabel" xml:space="preserve">
    <value>날짜 및 시간</value>
    <comment>Date and time label for notification cards</comment>
  </data>
  <data name="DescriptionLabelCard" xml:space="preserve">
    <value>설명</value>
    <comment>Event description label in cards</comment>
  </data>
  <data name="EditEventCardButton" xml:space="preserve">
    <value>이벤트 편집</value>
    <comment>Edit event card button</comment>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>종료 날짜</value>
    <comment>The value for end date text</comment>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>오류</value>
    <comment>The task module title for error page</comment>
  </data>
  <data name="EventDescription" xml:space="preserve">
    <value>설명</value>
    <comment>The value for event description text</comment>
  </data>
  <data name="EventName" xml:space="preserve">
    <value>이벤트 이름</value>
    <comment>The value for event name text</comment>
  </data>
  <data name="ExportDetailsCardButton" xml:space="preserve">
    <value>등록 데이터 내보내기</value>
    <comment>Export details card button</comment>
  </data>
  <data name="LoadingImageAltText" xml:space="preserve">
    <value>이미지 로드 중</value>
    <comment>The alternative text for loading an image</comment>
  </data>
  <data name="NumberOfRegistrations" xml:space="preserve">
    <value>등록</value>
    <comment>The value for number of registrations</comment>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>등록</value>
    <comment>Adaptive card button text for invoking register event task module</comment>
  </data>
  <data name="RegisteredUsers" xml:space="preserve">
    <value>등록된 참가자</value>
    <comment>The value for registered users text</comment>
  </data>
  <data name="ReminderCardRegisteredEventButton" xml:space="preserve">
    <value>등록 보기</value>
    <comment>The button text to view registered events</comment>
  </data>
  <data name="ReminderCardTitle" xml:space="preserve">
    <value>미리 알림!</value>
    <comment>The reminder card title</comment>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>시작 날짜</value>
    <comment>The value for start date text</comment>
  </data>
  <data name="TeamsMeetingText" xml:space="preserve">
    <value>Teams 모임</value>
    <comment>The event venue value if the meeting location is teams meeting</comment>
  </data>
  <data name="TrainingType" xml:space="preserve">
    <value>이벤트 유형</value>
    <comment>The value for training type</comment>
  </data>
  <data name="TrainingTypeInPerson" xml:space="preserve">
    <value>직접 방문</value>
    <comment>The in-person event text</comment>
  </data>
  <data name="TrainingTypeLiveEvent" xml:space="preserve">
    <value>라이브 이벤트</value>
    <comment>The live event text</comment>
  </data>
  <data name="Venue" xml:space="preserve">
    <value>장소</value>
    <comment>The value for venue text</comment>
  </data>
  <data name="ViewAllEventsCardButton" xml:space="preserve">
    <value>이벤트 모두 보기</value>
    <comment>Card button text to navigate user on all events tab</comment>
  </data>
  <data name="WeeklyReminderCardTitle" xml:space="preserve">
    <value>다음 주 이벤트</value>
    <comment>The reminder card title for weekly reminder</comment>
  </data>
  <data name="WelcomeCardTeamContentFooter" xml:space="preserve">
    <value>시작할 준비가 되셨나요? 아래에서 {0}을(를) 선택합니다.</value>
    <comment>Card content footer</comment>
  </data>
  <data name="WelcomeCardPersonalDiscoverButtonText" xml:space="preserve">
    <value>검색</value>
    <comment>Discover action button in welcome card</comment>
  </data>
  <data name="WelcomeCardPersonalIntro" xml:space="preserve">
    <value>새 이벤트를 검색하고 참여하기를 기대하시나요? 새 이벤트를 검색하고 이벤트에 참여하고 이벤트 생성 추적에 도움을 드릴 수 있습니다. 시작해 보겠습니다!</value>
    <comment>App intro text in welcome card for team</comment>
  </data>
  <data name="WelcomeCardPersonalPoint1" xml:space="preserve">
    <value>- 모든 이벤트를 검색하고 탐색합니다.</value>
    <comment>First point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint2" xml:space="preserve">
    <value>- 원하는 이벤트에 등록합니다.</value>
    <comment>Second point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint3" xml:space="preserve">
    <value>- 완료된 모든 이벤트를 추적합니다.</value>
    <comment>Third point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint4" xml:space="preserve">
    <value>- 등록된 이벤트의 모든 활동과 미리 알림을 받을 수 있도록 허용</value>
    <comment>Forth point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamHeading" xml:space="preserve">
    <value>특히, 다음 항목을 도와드릴 수 있습니다.</value>
    <comment>Welcome card content heading for team</comment>
  </data>
  <data name="WelcomeCardTeamIntro" xml:space="preserve">
    <value>저는 직원 교육 봇입니다. 조직에서 제공하는 학습 기회를 최대한 활용할 수 있도록 도와드릴 수 있습니다.</value>
    <comment>App intro text in welcome card for team</comment>
  </data>
  <data name="WelcomeCardTeamPoint1" xml:space="preserve">
    <value>- 예정된 모든 교육 이벤트 살펴보기</value>
    <comment>First point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint2" xml:space="preserve">
    <value>- 이벤트 등록</value>
    <comment>Second point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint3" xml:space="preserve">
    <value>- 완료된 학습 추적</value>
    <comment>Third point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint4" xml:space="preserve">
    <value>- 유용한 알림 및 미리 알림 받기</value>
    <comment>Forth point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTitle" xml:space="preserve">
    <value>환영합니다!</value>
    <comment>Welcome card title for personal and team scope</comment>
  </data>
  <data name="WelcomeCardPersonalContentFooter" xml:space="preserve">
    <value>시작할 준비가 되셨나요? 아래에서 {0}을(를) 선택합니다.</value>
    <comment>Welcome card footer message for personal scope</comment>
  </data>
  <data name="EventUpdatedCardTitle" xml:space="preserve">
    <value>이벤트가 업데이트되었습니다!</value>
    <comment>The title of a card in personal scope when an event gets updated</comment>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>오류가 발생했습니다. 잠시 후 다시 시도하세요.</value>
    <comment>The error message displayed when bot fails to send card</comment>
  </data>
  <data name="CalendarEventLocationText" xml:space="preserve">
    <value>위치: {0}</value>
    <comment>The event location placeholder text in calendar event body if the event type is in-person</comment>
  </data>
  <data name="CalendarEventLiveEventURLText" xml:space="preserve">
    <value>라이브 이벤트 URL: {0}</value>
    <comment>The live event URL placeholder text in calendar event body if the event type is live event</comment>
  </data>
  <data name="ErrorEventAudienceInvalid" xml:space="preserve">
    <value>잘못된 대상 값입니다. 1 또는 2여야 합니다.</value>
    <comment>Error message sent by API when event audience value</comment>
  </data>
  <data name="ErrorEventCategoryRequired" xml:space="preserve">
    <value>이벤트 범주는 필수입니다.</value>
    <comment>Error message sent by API when event category is blank</comment>
  </data>
  <data name="ErrorEventDescriptionLength" xml:space="preserve">
    <value>이벤트 설명 길이는 {0} 문자보다 클 수 없습니다.</value>
    <comment>Error message sent by API when event description length is not valid. {0} is placeholder which will be replaced by number at runtime.</comment>
  </data>
  <data name="ErrorEventDescriptionRequired" xml:space="preserve">
    <value>이벤트 설명은 필수입니다.</value>
    <comment>Error message sent by API when event description is blank</comment>
  </data>
  <data name="ErrorEventEndTimeInvalid" xml:space="preserve">
    <value>이벤트 종료 시간이 시작 시간보다 커야 합니다.</value>
    <comment>Error message sent by API when event end time is less than start time</comment>
  </data>
  <data name="ErrorEventEndTimeRequired" xml:space="preserve">
    <value>이벤트 종료 시간은 필수입니다.</value>
    <comment>Error message sent by API when event end time is blank</comment>
  </data>
  <data name="ErrorEventMaxParticipantsInvalid" xml:space="preserve">
    <value>유효하지 않은 최대 참가자 값</value>
    <comment>Error message sent by API when event max participants value</comment>
  </data>
  <data name="ErrorEventNameRequired" xml:space="preserve">
    <value>이벤트 이름이 필요합니다.</value>
    <comment>Error message sent by API when event name is blank</comment>
  </data>
  <data name="ErrorEventPhotoOrColorRequired" xml:space="preserve">
    <value>이벤트 사진 URL/색은 필수입니다.</value>
    <comment>Error message sent by API when event image or color is blank</comment>
  </data>
  <data name="ErrorEventPhotoURLInvalid" xml:space="preserve">
    <value>이벤트 사진 URL은 유효한 URL 형식이어야 합니다.</value>
    <comment>Error message sent by API when event photo URL is invalid</comment>
  </data>
  <data name="ErrorEventStartDateInvalid" xml:space="preserve">
    <value>이벤트 시작 날짜는 미래 날짜여야 합니다.</value>
    <comment>Error message sent by API when event start date is not future date</comment>
  </data>
  <data name="ErrorEventStartDateRequired" xml:space="preserve">
    <value>이벤트 시작 날짜는 필수입니다.</value>
    <comment>Error message sent by API when event start date is blank</comment>
  </data>
  <data name="ErrorEventStartTimeRequired" xml:space="preserve">
    <value>이벤트 시작 시간은 필수입니다.</value>
    <comment>Error message sent by API when event start time is blank</comment>
  </data>
  <data name="ErrorEventTypeInvalid" xml:space="preserve">
    <value>이벤트 유형 값이 잘못되었습니다. 이벤트 유형은 1에서 3사이여야 합니다.</value>
    <comment>Error message sent by API when event type is invalid</comment>
  </data>
  <data name="ErrorEventVenueInvalid" xml:space="preserve">
    <value>이벤트 행사장은 {0}자를 초과할 수 없습니다.</value>
    <comment>Error message sent by API when event venue is invalid</comment>
  </data>
  <data name="ErrorEventVenueRequired" xml:space="preserve">
    <value>모임 장소는 필수입니다.</value>
    <comment>Error message sent by API when event meeting venue is blank</comment>
  </data>
  <data name="ErrorMeetingLinkInvalid" xml:space="preserve">
    <value>모임 URL은 유효한 URL 형식이어야 합니다.</value>
    <comment>Error message sent by API when event meeting url is invalid</comment>
  </data>
  <data name="ErrorMeetingLinkRequired" xml:space="preserve">
    <value>모임 링크는 필수입니다.</value>
    <comment>Error message sent by API when event meeting link is blank</comment>
  </data>
  <data name="BotCommandAddEvent" xml:space="preserve">
    <value>이벤트 추가</value>
    <comment>Bot command add event. This needs to be match with SME manifest's command "Add Event" in translated json file.</comment>
  </data>
</root>