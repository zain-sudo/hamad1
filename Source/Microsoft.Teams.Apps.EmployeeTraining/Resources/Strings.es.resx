<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Audience" xml:space="preserve">
    <value>Quién puede asistir</value>
    <comment>The value for audience text</comment>
  </data>
  <data name="AudiencePrivate" xml:space="preserve">
    <value>Privado</value>
    <comment>The private event text</comment>
  </data>
  <data name="AudiencePublic" xml:space="preserve">
    <value>Público</value>
    <comment>The public event text</comment>
  </data>
  <data name="AutoRegisteredCardSubTitle" xml:space="preserve">
    <value>Se ha registrado automáticamente para este evento.</value>
    <comment>Auto registration card sub title</comment>
  </data>
  <data name="AutoRegisteredHeader" xml:space="preserve">
    <value>Evento obligatorio</value>
    <comment>Title for auto registration card sent to user</comment>
  </data>
  <data name="CancellationCardSubTitle" xml:space="preserve">
    <value>Lamentamos informarte de que se ha cancelado el siguiente evento.</value>
    <comment>Cancellation card subtitle</comment>
  </data>
  <data name="CancellationHeader" xml:space="preserve">
    <value>Evento cancelado</value>
    <comment>Cancellation card title</comment>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categoría</value>
    <comment>The value for category</comment>
  </data>
  <data name="CloseRegistrationCardButton" xml:space="preserve">
    <value>Cerrar registro</value>
    <comment>Close registrations card button</comment>
  </data>
  <data name="CreatedByLabel" xml:space="preserve">
    <value>Creado por</value>
    <comment>Created by user label text on card</comment>
  </data>
  <data name="CreateEventButtonWelcomeCard" xml:space="preserve">
    <value>Agregar evento</value>
    <comment>LnD team welcome card add event button text</comment>
  </data>
  <data name="CreateEventCardTitleText" xml:space="preserve">
    <value>Crear un evento</value>
    <comment>The create event card title</comment>
  </data>
  <data name="DailyReminderCardTitle" xml:space="preserve">
    <value>Eventos del mañana</value>
    <comment>The reminder card title for daily reminder</comment>
  </data>
  <data name="DateAndTimeLabel" xml:space="preserve">
    <value>Fecha y hora</value>
    <comment>Date and time label for notification cards</comment>
  </data>
  <data name="DescriptionLabelCard" xml:space="preserve">
    <value>Descripción</value>
    <comment>Event description label in cards</comment>
  </data>
  <data name="EditEventCardButton" xml:space="preserve">
    <value>Editar evento</value>
    <comment>Edit event card button</comment>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Fecha de finalización</value>
    <comment>The value for end date text</comment>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Error</value>
    <comment>The task module title for error page</comment>
  </data>
  <data name="EventDescription" xml:space="preserve">
    <value>Descripción</value>
    <comment>The value for event description text</comment>
  </data>
  <data name="EventName" xml:space="preserve">
    <value>Nombre del evento</value>
    <comment>The value for event name text</comment>
  </data>
  <data name="ExportDetailsCardButton" xml:space="preserve">
    <value>Exportar datos de registro</value>
    <comment>Export details card button</comment>
  </data>
  <data name="LoadingImageAltText" xml:space="preserve">
    <value>Cargando imagen</value>
    <comment>The alternative text for loading an image</comment>
  </data>
  <data name="NumberOfRegistrations" xml:space="preserve">
    <value>Registros</value>
    <comment>The value for number of registrations</comment>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>Registra</value>
    <comment>Adaptive card button text for invoking register event task module</comment>
  </data>
  <data name="RegisteredUsers" xml:space="preserve">
    <value>Participantes registrados</value>
    <comment>The value for registered users text</comment>
  </data>
  <data name="ReminderCardRegisteredEventButton" xml:space="preserve">
    <value>Ver registro</value>
    <comment>The button text to view registered events</comment>
  </data>
  <data name="ReminderCardTitle" xml:space="preserve">
    <value>¡Recordatorio!</value>
    <comment>The reminder card title</comment>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Fecha de inicio</value>
    <comment>The value for start date text</comment>
  </data>
  <data name="TeamsMeetingText" xml:space="preserve">
    <value>Reunión de Teams</value>
    <comment>The event venue value if the meeting location is teams meeting</comment>
  </data>
  <data name="TrainingType" xml:space="preserve">
    <value>Tipo de evento</value>
    <comment>The value for training type</comment>
  </data>
  <data name="TrainingTypeInPerson" xml:space="preserve">
    <value>En persona</value>
    <comment>The in-person event text</comment>
  </data>
  <data name="TrainingTypeLiveEvent" xml:space="preserve">
    <value>Evento en directo</value>
    <comment>The live event text</comment>
  </data>
  <data name="Venue" xml:space="preserve">
    <value>Lugar</value>
    <comment>The value for venue text</comment>
  </data>
  <data name="ViewAllEventsCardButton" xml:space="preserve">
    <value>Ver todos los eventos</value>
    <comment>Card button text to navigate user on all events tab</comment>
  </data>
  <data name="WeeklyReminderCardTitle" xml:space="preserve">
    <value>Eventos de la próxima semana</value>
    <comment>The reminder card title for weekly reminder</comment>
  </data>
  <data name="WelcomeCardTeamContentFooter" xml:space="preserve">
    <value>¿Listo para empezar? Seleccione {0} a continuación:</value>
    <comment>Card content footer</comment>
  </data>
  <data name="WelcomeCardPersonalDiscoverButtonText" xml:space="preserve">
    <value>Descubrir</value>
    <comment>Discover action button in welcome card</comment>
  </data>
  <data name="WelcomeCardPersonalIntro" xml:space="preserve">
    <value>¿Quiere descubrir y participar en nuevos eventos? Estoy aquí para ayudarle a descubrir nuevos eventos, participar en ellos y realizar un seguimiento de ellos. Así que, vamos a empezar.</value>
    <comment>App intro text in welcome card for team</comment>
  </data>
  <data name="WelcomeCardPersonalPoint1" xml:space="preserve">
    <value>- Descubrir y explorar todos los eventos.</value>
    <comment>First point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint2" xml:space="preserve">
    <value>- Regístrarse en los eventos que le gustan.</value>
    <comment>Second point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint3" xml:space="preserve">
    <value>- Realice un seguimiento de todos los eventos completados.</value>
    <comment>Third point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint4" xml:space="preserve">
    <value>- Reciba notificaciones sobre todas las actividades y reciba recordatorios de sus próximos eventos registrados.</value>
    <comment>Forth point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamHeading" xml:space="preserve">
    <value>En concreto, puedo ayudarle a:</value>
    <comment>Welcome card content heading for team</comment>
  </data>
  <data name="WelcomeCardTeamIntro" xml:space="preserve">
    <value>Soy el bot de Formación de los empleados y le puedo ayudar a sacar el máximo partido de las oportunidades de aprendizaje ofrecidas por su organización.</value>
    <comment>App intro text in welcome card for team</comment>
  </data>
  <data name="WelcomeCardTeamPoint1" xml:space="preserve">
    <value>- Explorar todos los eventos de aprendizaje futuros</value>
    <comment>First point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint2" xml:space="preserve">
    <value>- Registrarse para eventos</value>
    <comment>Second point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint3" xml:space="preserve">
    <value>- Realice un seguimiento de los aprendizajes completados</value>
    <comment>Third point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint4" xml:space="preserve">
    <value>- Obtener notificaciones y recordatorios útiles</value>
    <comment>Forth point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTitle" xml:space="preserve">
    <value>¡Bienvenido!</value>
    <comment>Welcome card title for personal and team scope</comment>
  </data>
  <data name="WelcomeCardPersonalContentFooter" xml:space="preserve">
    <value>¿Listo para empezar? Seleccione {0} a continuación:</value>
    <comment>Welcome card footer message for personal scope</comment>
  </data>
  <data name="EventUpdatedCardTitle" xml:space="preserve">
    <value>Evento actualizado</value>
    <comment>The title of a card in personal scope when an event gets updated</comment>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Ha habido un problema. Vuelve a intentarlo después de un tiempo.</value>
    <comment>The error message displayed when bot fails to send card</comment>
  </data>
  <data name="CalendarEventLocationText" xml:space="preserve">
    <value>Ubicación: {0}</value>
    <comment>The event location placeholder text in calendar event body if the event type is in-person</comment>
  </data>
  <data name="CalendarEventLiveEventURLText" xml:space="preserve">
    <value>URL del evento en directo: {0}</value>
    <comment>The live event URL placeholder text in calendar event body if the event type is live event</comment>
  </data>
  <data name="ErrorEventAudienceInvalid" xml:space="preserve">
    <value>Valor de audiencia no válido. Debe ser 1 o 2</value>
    <comment>Error message sent by API when event audience value</comment>
  </data>
  <data name="ErrorEventCategoryRequired" xml:space="preserve">
    <value>La categoría de evento es necesaria</value>
    <comment>Error message sent by API when event category is blank</comment>
  </data>
  <data name="ErrorEventDescriptionLength" xml:space="preserve">
    <value>La longitud de la descripción del evento no puede ser de más de {0} letras</value>
    <comment>Error message sent by API when event description length is not valid. {0} is placeholder which will be replaced by number at runtime.</comment>
  </data>
  <data name="ErrorEventDescriptionRequired" xml:space="preserve">
    <value>Es necesaria una descripción del evento</value>
    <comment>Error message sent by API when event description is blank</comment>
  </data>
  <data name="ErrorEventEndTimeInvalid" xml:space="preserve">
    <value>La hora de finalización del evento debe ser posterior a la hora de inicio</value>
    <comment>Error message sent by API when event end time is less than start time</comment>
  </data>
  <data name="ErrorEventEndTimeRequired" xml:space="preserve">
    <value>La hora de finalización del evento es necesaria</value>
    <comment>Error message sent by API when event end time is blank</comment>
  </data>
  <data name="ErrorEventMaxParticipantsInvalid" xml:space="preserve">
    <value>Valor de número máximo de participantes no válido</value>
    <comment>Error message sent by API when event max participants value</comment>
  </data>
  <data name="ErrorEventNameRequired" xml:space="preserve">
    <value>El nombre del evento es obligatorio</value>
    <comment>Error message sent by API when event name is blank</comment>
  </data>
  <data name="ErrorEventPhotoOrColorRequired" xml:space="preserve">
    <value>Se requiere la dirección URL o el color de la foto del evento</value>
    <comment>Error message sent by API when event image or color is blank</comment>
  </data>
  <data name="ErrorEventPhotoURLInvalid" xml:space="preserve">
    <value>La dirección URL de la foto del evento debe tener un formato de URL válido</value>
    <comment>Error message sent by API when event photo URL is invalid</comment>
  </data>
  <data name="ErrorEventStartDateInvalid" xml:space="preserve">
    <value>La fecha de inicio del evento debe ser una fecha futura</value>
    <comment>Error message sent by API when event start date is not future date</comment>
  </data>
  <data name="ErrorEventStartDateRequired" xml:space="preserve">
    <value>La fecha de inicio del evento es necesaria</value>
    <comment>Error message sent by API when event start date is blank</comment>
  </data>
  <data name="ErrorEventStartTimeRequired" xml:space="preserve">
    <value>La hora de inicio del evento es necesaria</value>
    <comment>Error message sent by API when event start time is blank</comment>
  </data>
  <data name="ErrorEventTypeInvalid" xml:space="preserve">
    <value>Valor de tipo de evento no válido. El tipo de evento debe estar entre 1 y 3</value>
    <comment>Error message sent by API when event type is invalid</comment>
  </data>
  <data name="ErrorEventVenueInvalid" xml:space="preserve">
    <value>El lugar del evento no puede tener más de {0} Letras</value>
    <comment>Error message sent by API when event venue is invalid</comment>
  </data>
  <data name="ErrorEventVenueRequired" xml:space="preserve">
    <value>Se requiere el lugar de la reunión</value>
    <comment>Error message sent by API when event meeting venue is blank</comment>
  </data>
  <data name="ErrorMeetingLinkInvalid" xml:space="preserve">
    <value>La dirección URL de la reunión debe tener un formato de URL válido</value>
    <comment>Error message sent by API when event meeting url is invalid</comment>
  </data>
  <data name="ErrorMeetingLinkRequired" xml:space="preserve">
    <value>El vínculo de reunión es obligatorio</value>
    <comment>Error message sent by API when event meeting link is blank</comment>
  </data>
  <data name="BotCommandAddEvent" xml:space="preserve">
    <value>Agregar evento</value>
    <comment>Bot command add event. This needs to be match with SME manifest's command "Add Event" in translated json file.</comment>
  </data>
</root>