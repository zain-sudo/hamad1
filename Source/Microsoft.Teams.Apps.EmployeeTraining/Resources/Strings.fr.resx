<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Audience" xml:space="preserve">
    <value>Qui peut participer</value>
    <comment>The value for audience text</comment>
  </data>
  <data name="AudiencePrivate" xml:space="preserve">
    <value>Privé</value>
    <comment>The private event text</comment>
  </data>
  <data name="AudiencePublic" xml:space="preserve">
    <value>Public</value>
    <comment>The public event text</comment>
  </data>
  <data name="AutoRegisteredCardSubTitle" xml:space="preserve">
    <value>Vous avez été inscrit automatiquement pour cet événement.</value>
    <comment>Auto registration card sub title</comment>
  </data>
  <data name="AutoRegisteredHeader" xml:space="preserve">
    <value>Événement obligatoire !</value>
    <comment>Title for auto registration card sent to user</comment>
  </data>
  <data name="CancellationCardSubTitle" xml:space="preserve">
    <value>Nous sommes désolés de vous informer que l’événement suivant a été annulé.</value>
    <comment>Cancellation card subtitle</comment>
  </data>
  <data name="CancellationHeader" xml:space="preserve">
    <value>Événement annulé</value>
    <comment>Cancellation card title</comment>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Catégorie</value>
    <comment>The value for category</comment>
  </data>
  <data name="CloseRegistrationCardButton" xml:space="preserve">
    <value>Fermer l’inscription</value>
    <comment>Close registrations card button</comment>
  </data>
  <data name="CreatedByLabel" xml:space="preserve">
    <value>Créé par</value>
    <comment>Created by user label text on card</comment>
  </data>
  <data name="CreateEventButtonWelcomeCard" xml:space="preserve">
    <value>Ajouter un événement</value>
    <comment>LnD team welcome card add event button text</comment>
  </data>
  <data name="CreateEventCardTitleText" xml:space="preserve">
    <value>Créer un événement</value>
    <comment>The create event card title</comment>
  </data>
  <data name="DailyReminderCardTitle" xml:space="preserve">
    <value>Événements de demain</value>
    <comment>The reminder card title for daily reminder</comment>
  </data>
  <data name="DateAndTimeLabel" xml:space="preserve">
    <value>Date et heure</value>
    <comment>Date and time label for notification cards</comment>
  </data>
  <data name="DescriptionLabelCard" xml:space="preserve">
    <value>Description</value>
    <comment>Event description label in cards</comment>
  </data>
  <data name="EditEventCardButton" xml:space="preserve">
    <value>Modifier l'événement</value>
    <comment>Edit event card button</comment>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Date de fin</value>
    <comment>The value for end date text</comment>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Erreur</value>
    <comment>The task module title for error page</comment>
  </data>
  <data name="EventDescription" xml:space="preserve">
    <value>Description</value>
    <comment>The value for event description text</comment>
  </data>
  <data name="EventName" xml:space="preserve">
    <value>Nom de l’événement</value>
    <comment>The value for event name text</comment>
  </data>
  <data name="ExportDetailsCardButton" xml:space="preserve">
    <value>Exporter les données d’inscription</value>
    <comment>Export details card button</comment>
  </data>
  <data name="LoadingImageAltText" xml:space="preserve">
    <value>Chargement de l’image...</value>
    <comment>The alternative text for loading an image</comment>
  </data>
  <data name="NumberOfRegistrations" xml:space="preserve">
    <value>Inscriptions</value>
    <comment>The value for number of registrations</comment>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>S'inscrire</value>
    <comment>Adaptive card button text for invoking register event task module</comment>
  </data>
  <data name="RegisteredUsers" xml:space="preserve">
    <value>Participants inscrits</value>
    <comment>The value for registered users text</comment>
  </data>
  <data name="ReminderCardRegisteredEventButton" xml:space="preserve">
    <value>Afficher l’inscription</value>
    <comment>The button text to view registered events</comment>
  </data>
  <data name="ReminderCardTitle" xml:space="preserve">
    <value>Rappel</value>
    <comment>The reminder card title</comment>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Date de début</value>
    <comment>The value for start date text</comment>
  </data>
  <data name="TeamsMeetingText" xml:space="preserve">
    <value>Réunion Teams</value>
    <comment>The event venue value if the meeting location is teams meeting</comment>
  </data>
  <data name="TrainingType" xml:space="preserve">
    <value>Type d'événement</value>
    <comment>The value for training type</comment>
  </data>
  <data name="TrainingTypeInPerson" xml:space="preserve">
    <value>En personne</value>
    <comment>The in-person event text</comment>
  </data>
  <data name="TrainingTypeLiveEvent" xml:space="preserve">
    <value>Événement en direct</value>
    <comment>The live event text</comment>
  </data>
  <data name="Venue" xml:space="preserve">
    <value>Lieu</value>
    <comment>The value for venue text</comment>
  </data>
  <data name="ViewAllEventsCardButton" xml:space="preserve">
    <value>Afficher tous les événements</value>
    <comment>Card button text to navigate user on all events tab</comment>
  </data>
  <data name="WeeklyReminderCardTitle" xml:space="preserve">
    <value>Événements de la semaine prochaine</value>
    <comment>The reminder card title for weekly reminder</comment>
  </data>
  <data name="WelcomeCardTeamContentFooter" xml:space="preserve">
    <value>Vous êtes prêt à commencer ? Sélectionnez {0} ci-dessous :</value>
    <comment>Card content footer</comment>
  </data>
  <data name="WelcomeCardPersonalDiscoverButtonText" xml:space="preserve">
    <value>Découvrir</value>
    <comment>Discover action button in welcome card</comment>
  </data>
  <data name="WelcomeCardPersonalIntro" xml:space="preserve">
    <value>Vous cherchez à découvrir et à participer à de nouveaux événements ? Je suis ici pour vous aider à découvrir de nouveaux événements, à y participer, et à suivre leur occurrence. Commençons donc !</value>
    <comment>App intro text in welcome card for team</comment>
  </data>
  <data name="WelcomeCardPersonalPoint1" xml:space="preserve">
    <value>-Découvrez et explorez tous les événements.</value>
    <comment>First point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint2" xml:space="preserve">
    <value>-Inscrivez-vous aux événements que vous aimez.</value>
    <comment>Second point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint3" xml:space="preserve">
    <value>-Gardez une trace de tous vos événements terminés.</value>
    <comment>Third point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardPersonalPoint4" xml:space="preserve">
    <value>-Recevez une notification pour toutes vos activités et recevez des rappels de vos prochains événements enregistrés.</value>
    <comment>Forth point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamHeading" xml:space="preserve">
    <value>En particulier, je peux vous aider à :</value>
    <comment>Welcome card content heading for team</comment>
  </data>
  <data name="WelcomeCardTeamIntro" xml:space="preserve">
    <value>Je suis le bot de formation des employés et je peux vous aider à tirer le meilleur parti des opportunités d’apprentissage offerts par votre organisation.</value>
    <comment>App intro text in welcome card for team</comment>
  </data>
  <data name="WelcomeCardTeamPoint1" xml:space="preserve">
    <value>-Explorez tous les prochains événements de formation</value>
    <comment>First point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint2" xml:space="preserve">
    <value>-S’inscrire aux événements</value>
    <comment>Second point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint3" xml:space="preserve">
    <value>-Gardez une trace des formations terminées</value>
    <comment>Third point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTeamPoint4" xml:space="preserve">
    <value>-Recevez des notifications et des rappels utiles</value>
    <comment>Forth point highlighting feature of app</comment>
  </data>
  <data name="WelcomeCardTitle" xml:space="preserve">
    <value>Bienvenue !</value>
    <comment>Welcome card title for personal and team scope</comment>
  </data>
  <data name="WelcomeCardPersonalContentFooter" xml:space="preserve">
    <value>Vous êtes prêt à commencer ? Sélectionnez {0} ci-dessous :</value>
    <comment>Welcome card footer message for personal scope</comment>
  </data>
  <data name="EventUpdatedCardTitle" xml:space="preserve">
    <value>Événement mis à jour</value>
    <comment>The title of a card in personal scope when an event gets updated</comment>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Nous avons rencontré un problème. Veuillez réessayer plus tard.</value>
    <comment>The error message displayed when bot fails to send card</comment>
  </data>
  <data name="CalendarEventLocationText" xml:space="preserve">
    <value>Emplacement : {0}</value>
    <comment>The event location placeholder text in calendar event body if the event type is in-person</comment>
  </data>
  <data name="CalendarEventLiveEventURLText" xml:space="preserve">
    <value>URL de l’événement en direct : {0}</value>
    <comment>The live event URL placeholder text in calendar event body if the event type is live event</comment>
  </data>
  <data name="ErrorEventAudienceInvalid" xml:space="preserve">
    <value>Valeur d’audience non valide. Il doit avoir la valeur 1 ou 2</value>
    <comment>Error message sent by API when event audience value</comment>
  </data>
  <data name="ErrorEventCategoryRequired" xml:space="preserve">
    <value>La catégorie de l’événement est obligatoire</value>
    <comment>Error message sent by API when event category is blank</comment>
  </data>
  <data name="ErrorEventDescriptionLength" xml:space="preserve">
    <value>La longueur de la description de l’événement ne peut pas dépasser {0} lettres</value>
    <comment>Error message sent by API when event description length is not valid. {0} is placeholder which will be replaced by number at runtime.</comment>
  </data>
  <data name="ErrorEventDescriptionRequired" xml:space="preserve">
    <value>La description de l’événement est obligatoire</value>
    <comment>Error message sent by API when event description is blank</comment>
  </data>
  <data name="ErrorEventEndTimeInvalid" xml:space="preserve">
    <value>L'heure de fin de l’événement doit être postérieure à celle de début</value>
    <comment>Error message sent by API when event end time is less than start time</comment>
  </data>
  <data name="ErrorEventEndTimeRequired" xml:space="preserve">
    <value>L’heure de fin de l’événement est obligatoire</value>
    <comment>Error message sent by API when event end time is blank</comment>
  </data>
  <data name="ErrorEventMaxParticipantsInvalid" xml:space="preserve">
    <value>Valeur maximale des participants non valide</value>
    <comment>Error message sent by API when event max participants value</comment>
  </data>
  <data name="ErrorEventNameRequired" xml:space="preserve">
    <value>Le nom de l’événement est obligatoire</value>
    <comment>Error message sent by API when event name is blank</comment>
  </data>
  <data name="ErrorEventPhotoOrColorRequired" xml:space="preserve">
    <value>URL/couleur de photo d’événement requise</value>
    <comment>Error message sent by API when event image or color is blank</comment>
  </data>
  <data name="ErrorEventPhotoURLInvalid" xml:space="preserve">
    <value>L’URL de la photo de l’événement doit être dans un format d’URL valide</value>
    <comment>Error message sent by API when event photo URL is invalid</comment>
  </data>
  <data name="ErrorEventStartDateInvalid" xml:space="preserve">
    <value>La date de début de l’événement doit être une date à venir</value>
    <comment>Error message sent by API when event start date is not future date</comment>
  </data>
  <data name="ErrorEventStartDateRequired" xml:space="preserve">
    <value>Vous devez indiquer une date de début d’événement</value>
    <comment>Error message sent by API when event start date is blank</comment>
  </data>
  <data name="ErrorEventStartTimeRequired" xml:space="preserve">
    <value>L’heure de début de l’événement est obligatoire.</value>
    <comment>Error message sent by API when event start time is blank</comment>
  </data>
  <data name="ErrorEventTypeInvalid" xml:space="preserve">
    <value>Valeur de type d’événement non valide. Le type d’événement doit être compris entre 1 et 3</value>
    <comment>Error message sent by API when event type is invalid</comment>
  </data>
  <data name="ErrorEventVenueInvalid" xml:space="preserve">
    <value>La salle des événements ne peut pas contenir plus de {0} lettres</value>
    <comment>Error message sent by API when event venue is invalid</comment>
  </data>
  <data name="ErrorEventVenueRequired" xml:space="preserve">
    <value>Une salle de réunion est requise</value>
    <comment>Error message sent by API when event meeting venue is blank</comment>
  </data>
  <data name="ErrorMeetingLinkInvalid" xml:space="preserve">
    <value>L’URL de la réunion doit être dans un format d’URL valide</value>
    <comment>Error message sent by API when event meeting url is invalid</comment>
  </data>
  <data name="ErrorMeetingLinkRequired" xml:space="preserve">
    <value>Le lien de la réunion est requis</value>
    <comment>Error message sent by API when event meeting link is blank</comment>
  </data>
  <data name="BotCommandAddEvent" xml:space="preserve">
    <value>Ajouter un événement</value>
    <comment>Bot command add event. This needs to be match with SME manifest's command "Add Event" in translated json file.</comment>
  </data>
</root>